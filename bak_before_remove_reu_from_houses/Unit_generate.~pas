unit Unit_generate;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, OleCtnrs, DB, OracleData,
  Oracle,
  ExtCtrls, Unit_Mainform, Mask, DBCtrls, abfComponents, Utils;

type
  TForm_generate = class(TForm)
    Label1: TLabel;
    GroupBox1: TGroupBox;
    CheckBox6: TCheckBox;
    CheckBox3: TCheckBox;
    CheckBox5: TCheckBox;
    CheckBox4: TCheckBox;
    GroupBox3: TGroupBox;
    CheckBox2: TCheckBox;
    DBEdit1: TDBEdit;
    GroupBox4: TGroupBox;
    CheckBox9: TCheckBox;
    GroupBox5: TGroupBox;
    Button2: TButton;
    GroupBox2: TGroupBox;
    CheckBox10: TCheckBox;
    GroupBox7: TGroupBox;
    CheckBox12: TCheckBox;
    GroupBox8: TGroupBox;
    CheckBox11: TCheckBox;
    GroupBox9: TGroupBox;
    CheckBox15: TCheckBox;
    CheckBox16: TCheckBox;
    abfThreadComponent1: TabfThreadComponent;
    Button3: TButton;
    CheckBox17: TCheckBox;
    CheckBox19: TCheckBox;
    CheckBox20: TCheckBox;
    CheckBox8: TCheckBox;
    Label2: TLabel;
    CheckBox7: TCheckBox;
    CheckBox18: TCheckBox;
    CheckBox1: TCheckBox;
    Timer1: TTimer;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure abfThreadComponent1Execute(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure CheckBox20Click(Sender: TObject);
  private
    //признак перехода месяца
    state_: Integer;
  public
    { Public declarations }
  end;

var
  Form_generate: TForm_generate;

implementation

uses DM_module1, Unit_status_gen, Unit_sel_comps, Unit_gen_err_lst;

{$R *.dfm}

procedure TForm_generate.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  Action:=caFree;
end;

procedure Generate;
var
  Time1: TDateTime;
  razn_: Double;
  err_, cnt_: Integer;
  err_str_: string;
begin
with Form_generate do
begin

  state_:=0;
  Time1:=Now();

  if CheckBox20.Checked = true then //если задано итоговое формирование..
  begin
    //В начале необходимо закрыть базу для доступа пользователей,
    //иначе может повлиять на отчётность
    DataModule1.OraclePackage1.CallProcedure
           ('scott.admin.set_state_base', [1]);

    //Проверки л/c
    DataModule1.OraclePackage1.CallProcedure
           ('scott.gen.gen_check', [parInteger, parString, 5]);
    err_:=DataModule1.OraclePackage1.GetParameter(0);
    if err_ <> 0 then
    begin
      state_:=3;
      Form_status_gen.Close;
      Exit;
    end;

    //Основные проверки
    DataModule1.OraclePackage1.CallProcedure
           ('scott.gen.gen_check', [parInteger, parString, 1]);
    err_:=DataModule1.OraclePackage1.GetParameter(0);
    err_str_:=DataModule1.OraclePackage1.GetParameter(1);
    if err_ <> 0 then
    begin
      state_:=4;
      Form_status_gen.Close;
      msg2(err_str_,
        'Внимание', MB_OK+MB_ICONEXCLAMATION);
      Exit;
    end;
  end;

  if (CheckBox9.Checked) then //задан переход месяца
  begin
    //признак перехода месяца
    state_:=1;

    //Выполняем стандартные проверки
    DataModule1.OraclePackage1.CallProcedure
           ('scott.gen.gen_check', [parInteger, parString, 1]);
    err_:=DataModule1.OraclePackage1.GetParameter(0);
    err_str_:=DataModule1.OraclePackage1.GetParameter(1);
    if err_ <> 0 then
    begin
      state_:=2;
      Form_status_gen.Close;
      msg2(err_str_,
        'Внимание', MB_OK+MB_ICONEXCLAMATION);
      Exit;
    end;

    //проверяем, выполнено ли итоговое формирование
    DataModule1.OraclePackage1.CallProcedure
         ('scott.gen.gen_check', [parInteger, parString, 3]);
    err_:=DataModule1.OraclePackage1.GetParameter(0);
    err_str_:=DataModule1.OraclePackage1.GetParameter(1);
    if err_ <> 0 then
    begin
      state_:=2;
      Form_status_gen.Close;
      msg2(err_str_,
        'Внимание',
        MB_OK+MB_ICONEXCLAMATION);
      exit;
    end;

    //проверяем, сальдо
    DataModule1.OraclePackage1.CallProcedure
           ('scott.gen.gen_check', [parInteger, parString, 4]);
    err_:=DataModule1.OraclePackage1.GetParameter(0);
    err_str_:=DataModule1.OraclePackage1.GetParameter(1);
    if err_ <> 0 then
    begin
      state_:=2;
      Form_status_gen.Close;
      msg2(err_str_,
        'Внимание', MB_OK+MB_ICONEXCLAMATION);
      Exit;
    end;
  end;

  if (CheckBox9.Checked = false) then
    //сброс признака итогового формирования
     DataModule1.OraclePackage1.CallProcedure
           ('scott.init.set_state', [0]);

  // Распределение воды
  if CheckBox19.Checked then
  begin
   //строго соблюдать порядок выполнения процедур
   DataModule1.OraclePackage1.CallProcedure
         ('scott.GEN.distrib_vols', [parNone]);
   Checkbox19.Color := clLime;
  end;

  // Формирование начисления
  if CheckBox15.Checked then
  begin
   //строго соблюдать порядок выполнения процедур
   DataModule1.OraclePackage1.CallProcedure
         ('scott.GEN.gen_c_charges', [Null]);
   Checkbox15.Color := clLime;
  end;

  if CheckBox10.Checked then
  begin
   DataModule1.OraclePackage1.CallProcedure
        ('scott.gen.gen_lg', [Form_Main.OD_params.FieldByName('period').AsString]);
   Form_status_gen.Memo1.Lines.Text:=('Сформировано: '+CheckBox10.Caption);
   Checkbox10.Color := clLime;

  end;

  //строго соблюдать порядок выполнения процедур
  // Подготовка оплаты
  if CheckBox1.Checked then
  begin
   DataModule1.OraclePackage1.CallProcedure
         ('scott.c_gen_pay.distrib_payment', [null, null]);
   Form_status_gen.Memo1.Lines.Text:=('Сформировано: '+CheckBox1.Caption);
   Checkbox1.Color := clLime;
  end;

  // Формирование Сальдо
  if CheckBox7.Checked then
  begin
   DataModule1.OraclePackage1.CallProcedure
      ('scott.gen.GEN_SALDO', [null]);
   Form_status_gen.Memo1.Lines.Text:=('Сформировано: '+CheckBox7.Caption);
   Checkbox7.Color := clLime;
  end;

  // Движение по Л/С, пеня (после сальдо, - для распределения)
  if CheckBox18.Checked then
  begin
   DataModule1.OraclePackage1.CallProcedure
         ('scott.C_CPENYA.gen_charge_pay_pen', [parNone]);
   Checkbox18.Color := clLime;
  end;

  //  Формирование сальдо по домам
  if CheckBox2.Checked then
  begin
   //  Формирование сальдо по домам (xito1)
   DataModule1.OraclePackage1.CallProcedure
      ('scott.gen.GEN_SALDO_HOUSES', [Form_Main.OD_params.FieldByName('period').AsString]);
   DataModule1.OraclePackage1.CallProcedure
      ('scott.gen.gen_xito13', parNone);
   Checkbox2.Color := clLime;
  end;

  // Формирование оплаты по операциям
  if CheckBox4.Checked then
  begin
   DataModule1.OraclePackage1.CallProcedure
         ('scott.gen.gen_opl_xito5', [Form_Main.OD_params.FieldByName('period').AsString]);
   Form_status_gen.Memo1.Lines.Text:=('Сформировано: '+CheckBox4.Caption);
   Checkbox4.Color := clLime;

  end;

  if CheckBox5.Checked then
  begin
   DataModule1.OraclePackage1.CallProcedure
         ('scott.gen.gen_opl_xito5_', [Form_Main.OD_params.FieldByName('period').AsString]);
   Form_status_gen.Memo1.Lines.Text:=('Сформировано: '+CheckBox5.Caption);
   Checkbox5.Color := clLime;

  end;

  if CheckBox3.Checked then
  begin
   DataModule1.OraclePackage1.CallProcedure
         ('scott.gen.gen_opl_xito10', [Form_Main.OD_params.FieldByName('period').AsString]);
   Form_status_gen.Memo1.Lines.Text:=('Сформировано: '+CheckBox3.Caption);
   Checkbox3.Color := clLime;

  end;

  if CheckBox6.Checked then
  begin
   DataModule1.OraclePackage1.CallProcedure
        ('scott.gen.gen_opl_xito3', [Form_Main.OD_params.FieldByName('period').AsString]);
   Form_status_gen.Memo1.Lines.Text:=('Сформировано: '+CheckBox6.Caption);
   Checkbox6.Color := clLime;

  end;

  //счета+ долги по месяцам
  if CheckBox11.Checked then
  begin
  //Не менять порядок выполнения процедур
   DataModule1.OraclePackage1.CallProcedure
         ('scott.gen.prepare_arch', [Null]);
   DataModule1.OraclePackage1.CallProcedure
         ('scott.gen.gen_debits_lsk_month', [Null]);
   Form_status_gen.Memo1.Lines.Text:=('Сформировано: '+CheckBox11.Caption);
   Checkbox11.Color := clLime;
  end;

  //Списки всяческие (строго после архивов)
  if CheckBox16.Checked then
  begin
   DataModule1.OraclePackage1.CallProcedure
        ('scott.C_EXP_LIST.privs_export', [parNone]);
   DataModule1.OraclePackage1.CallProcedure
        ('scott.C_EXP_LIST.changes_export', [parNone]);
   DataModule1.OraclePackage1.CallProcedure
        ('scott.C_EXP_LIST.charges_export', [parNone]);
   Form_status_gen.Memo1.Lines.Text:=('Сформировано: '+CheckBox16.Caption);
   Checkbox16.Color := clLime;
  end;

  // Генерация статистики
  if CheckBox12.Checked then
  begin
   DataModule1.OraclePackage1.CallProcedure
         ('scott.gen.gen_stat_usl', [null]);
   Form_status_gen.Memo1.Lines.Text:=('Сформировано: '+CheckBox12.Caption);
   Checkbox12.Color := clLime;
  end;

  if CheckBox9.Checked then
  begin
   DataModule1.OraclePackage1.CallProcedure
         ('scott.gen.go_next_month_year', [parNone]);
   Form_status_gen.Memo1.Lines.Text:=('Сформировано: '+CheckBox9.Caption);
  // Формирование начисления
   DataModule1.OraclePackage1.CallProcedure
         ('scott.GEN.gen_c_charges', [Null]);
  //Сальдо, для распределения пени
   DataModule1.OraclePackage1.CallProcedure
      ('scott.gen.GEN_SALDO', [null]);
  // Движение по Л/С
   DataModule1.OraclePackage1.CallProcedure
         ('scott.C_CPENYA.gen_charge_pay_pen', [parNone]);
   Checkbox9.Color := clLime;
  end;

  if CheckBox17.Checked then
  begin
   DataModule1.OraclePackage1.CallProcedure
         ('scott.admin.analyze_all_tables', [parNone]);
   Form_status_gen.Memo1.Lines.Text:=('Сформировано: '+CheckBox17.Caption);
   Checkbox17.Color := clLime;
  end;

  if CheckBox8.Checked then
  begin
   DataModule1.OraclePackage1.CallProcedure
         ('scott.gen.make_tree_obj', [parNone]);
   Form_status_gen.Memo1.Lines.Text:=('Сформировано: '+CheckBox8.Caption);
   Checkbox8.Color := clLime;
  end;

  if CheckBox20.Checked = true then //если задано итоговое формирование..
  begin                             //Окончательная проверка на корректность сальдо
    DataModule1.OraclePackage1.CallProcedure
           ('scott.gen.gen_check', [parInteger, parString, 4]);
    err_:=DataModule1.OraclePackage1.GetParameter(0);
    err_str_:=DataModule1.OraclePackage1.GetParameter(1);
    if err_ <> 0 then
    begin
      Form_status_gen.Close;
      msg2(err_str_,
        'Внимание', MB_OK+MB_ICONEXCLAMATION);
      Exit;
    end;
  end;

  Form_Main.OD_params.Refresh;

  Form_status_gen.Close;
  Time1:=Now()-Time1;
  Caption:='Время форм.:'+TimeToStr(Time1);

  //установка признака итогового формирования
   if CheckBox20.Checked = true then //если было итоговое формирование
     DataModule1.OraclePackage1.CallProcedure
          ('scott.init.set_state', [1]);

///
   Checkbox19.Color := clBtnFace;
   Checkbox18.Color := clBtnFace;
   Checkbox17.Color := clBtnFace;
   Checkbox16.Color := clBtnFace;
   Checkbox15.Color := clBtnFace;
   Checkbox12.Color := clBtnFace;
   Checkbox11.Color := clBtnFace;
   Checkbox10.Color := clBtnFace;
   Checkbox8.Color := clBtnFace;
   Checkbox9.Color := clBtnFace;
   Checkbox4.Color := clBtnFace;
   Checkbox5.Color := clBtnFace;
   Checkbox7.Color := clBtnFace;
   Checkbox6.Color := clBtnFace;
   Checkbox3.Color := clBtnFace;
   Checkbox2.Color := clBtnFace;
   Checkbox1.Color := clBtnFace;
   Form_generate.Update;
  end;

end;

procedure TForm_generate.Button1Click(Sender: TObject);
Var
  cnt_ : Integer;
begin
    Generate; //Формирование
    Form_Main.OD_params.Refresh;
end;

procedure TForm_generate.Button2Click(Sender: TObject);
begin
  Close;
end;

procedure TForm_generate.FormShow(Sender: TObject);
begin
  Form_Main.OD_params.Active := true;
end;

procedure TForm_generate.Timer1Timer(Sender: TObject);
var
  cnt_: Integer;
begin
   Timer1.Enabled:=False;
   if state_=1 then //если был назначен переход месяца...
   begin
     msg4('Выполнен переход месяца, необходимо задать текущую дату!',
       'Внимание!' , MB_ICONINFORMATION+MB_OK);
     Application.CreateForm(TForm_sel_comps, Form_sel_comps);
     Form_sel_comps.ShowModal;
   end
   else if state_=2 then //если был назначен переход месяца, но он прошёл с ошибкой
   begin
     msg4('Переход месяца не выполнен!',
       'Внимание!' , MB_ICONERROR+MB_OK);
   end
   else if state_=3 then //Итоговое формирование произошло с ошибкой
   begin
    Application.CreateForm(TForm_gen_err_lst, Form_gen_err_lst);
    Form_gen_err_lst.ShowModal;
    msg4('Формирование остановлено!',
      'Внимание!' , MB_ICONINFORMATION+MB_OK);
   end
   else if state_=4 then //Итоговое формирование произошло с ошибкой
   begin
    msg4('Формирование остановлено!',
        'Внимание!' , MB_ICONINFORMATION+MB_OK);
   end
   else
   begin
     msg4('Формирование выполнено!',
          'Внимание!' , MB_ICONINFORMATION+MB_OK);
   end;


end;

procedure TForm_generate.abfThreadComponent1Execute(Sender: TObject);
begin
  GroupBox9.Enabled:=false;
  GroupBox2.Enabled:=false;
  GroupBox1.Enabled:=false;
  GroupBox3.Enabled:=false;
  GroupBox8.Enabled:=false;
  GroupBox7.Enabled:=false;
  GroupBox4.Enabled:=false;
  GroupBox5.Enabled:=false;
  Generate;
  GroupBox9.Enabled:=true;
  GroupBox2.Enabled:=true;
  GroupBox1.Enabled:=true;
  GroupBox3.Enabled:=true;
  GroupBox8.Enabled:=true;
  GroupBox7.Enabled:=true;
  GroupBox4.Enabled:=true;
  GroupBox5.Enabled:=true;
  Timer1.Enabled:=True;
end;

procedure TForm_generate.Button3Click(Sender: TObject);
begin
  Application.CreateForm(TForm_status_gen, Form_status_gen);
  abfThreadComponent1.Execute;
end;

procedure TForm_generate.CheckBox20Click(Sender: TObject);
begin
  if CheckBox20.Checked = true then
  begin
    CheckBox15.Checked:=true;
    CheckBox18.Checked:=true;
    CheckBox19.Checked:=true;
    CheckBox10.Checked:=true;
    CheckBox1.Checked:=true;
    CheckBox3.Checked:=true;
    CheckBox4.Checked:=true;
    CheckBox5.Checked:=true;
    CheckBox6.Checked:=true;
    CheckBox7.Checked:=true;

    CheckBox2.Checked:=true;
    CheckBox8.Checked:=true;

    CheckBox11.Checked:=true;
    CheckBox12.Checked:=true;
    if DataModule1.OraclePackage1.CallIntegerFunction
         ('scott.INIT.get_gen_exp_lst', [parNone]) = 1 then
        CheckBox16.Checked:=true;
 //
    CheckBox15.Enabled:=false;
    CheckBox18.Enabled:=false;
    CheckBox19.Enabled:=false;
    CheckBox10.Enabled:=false;
    CheckBox1.Enabled:=false;
    CheckBox3.Enabled:=false;
    CheckBox4.Enabled:=false;
    CheckBox5.Enabled:=false;
    CheckBox6.Enabled:=false;
    CheckBox7.Enabled:=false;

    CheckBox2.Enabled:=false;
    CheckBox8.Enabled:=false;

    CheckBox11.Enabled:=false;
    CheckBox12.Enabled:=false;
    CheckBox16.Enabled:=false;
  end
  else
  begin
    CheckBox15.Checked:=false;
    CheckBox18.Checked:=false;
    CheckBox19.Checked:=false;
    CheckBox10.Checked:=false;
    CheckBox1.Checked:=false;
    CheckBox3.Checked:=false;
    CheckBox4.Checked:=false;
    CheckBox5.Checked:=false;
    CheckBox6.Checked:=false;
    CheckBox7.Checked:=false;

    CheckBox2.Checked:=false;
    CheckBox8.Checked:=false;

    CheckBox11.Checked:=false;
    CheckBox12.Checked:=false;
    CheckBox16.Checked:=false;
//
    CheckBox15.Enabled:=true;
    CheckBox18.Enabled:=true;
    CheckBox19.Enabled:=true;
    CheckBox10.Enabled:=true;
    CheckBox1.Enabled:=true;
    CheckBox3.Enabled:=true;
    CheckBox4.Enabled:=true;
    CheckBox5.Enabled:=true;
    CheckBox6.Enabled:=true;
    CheckBox7.Enabled:=true;

    CheckBox2.Enabled:=true;
    CheckBox8.Enabled:=true;

    CheckBox11.Enabled:=true;
    CheckBox12.Enabled:=true;
    CheckBox16.Enabled:=true;
  end;
end;

end.



